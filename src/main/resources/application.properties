spring.profiles.active=pro
server.port=8080
server.tomcat.uri-encoding=UTF-8

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#jdbc
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#druid
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#初始化大小
spring.datasource.initialSize=20
#最小数量
spring.datasource.minIdle=30
#最大
spring.datasource.maxActive=50
#配置获取连接等待超时的时间
spring.datasource.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中的最小生存时间，单位是毫秒， 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.minEvictableIdleTimeMillis=300000
#测试连接
spring.datasource.validationQuery=SELECT 'x'
#申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
spring.datasource.testWhileIdle=true
#获取连接时执行检测，建议关闭，影响性能
spring.datasource.testOnBorrow=false
#归还连接时执行检测，建议关闭，影响性能
spring.datasource.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters,去掉后监控界面SQL将无法统计，‘wall’用于防火墙,#配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
spring.datasource.filters=stat
#通过connectionProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#druid
druid.login.enabled=true
druid.login.username=admin
druid.login.password=admin

#hikari,一个快速数据库连接池
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

#mybatis
mybatis.mapper-locations=classpath:mapping/*.xml
mybatis.type-aliases-package=com.test.myspringboot.entity
#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.pool.max-active=8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=-1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.jedis.pool.max-idle=8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=0
spring.redis.lettuce.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=2000


#rabbitmq
# 开启发送确认
spring.rabbitmq.publisher-confirms=true
# 开启发送失败退回
spring.rabbitmq.publisher-returns=true
#spring.rabbitmq.template.mandatory=true
# 开启ACK
spring.rabbitmq.listener.direct.acknowledge-mode=manual
spring.rabbitmq.listener.simple.acknowledge-mode=manual